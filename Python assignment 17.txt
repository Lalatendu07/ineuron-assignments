1. Assign the value 7 to the variable guess_me. Then, write the conditional tests (if, else, and elif) to print the string 'too low' if guess_me is less than 7, 'too high' if greater than 7, and 'just right' if equal to 7.
Ans. guess_me=7
     if guess_me < 7 :
         print('too low')
     elif guess_me > 7 :
         print('too high')
     else:
         print('just right')

2. Assign the value 7 to the variable guess_me and the value 1 to the variable start. Write a while loop that compares start with guess_me. Print too low if start is less than guess me. If start equals guess_me, print 'found it!' and exit the loop. If start is greater than guess_me, print 'oops' and exit the loop. Increment start at the end of the loop.
Ans.guess_me = 7
    start = 1
    while True:
          if guess_me > start :
                print('too low')
          elif guess_me == start :
                print('found it!')
                break
          else:
                print('oops')
                break
          start += 1      

3. Print the following values of the list [3, 2, 1, 0] using a for loop.
Ans. list1 = [3,2,1,0]
     for i in list1 :
         print(i)        

4. Use a list comprehension to make a list of the even numbers in range(10)
Ans.print([i for i in range(11) if i%2==0])
    output:-[0,2,4,6,8,10]

5. Use a dictionary comprehension to create the dictionary squares. Use range(10) to return the keys, and use the square of each key as its value.
Ans.print({i:i**2 for i in range(10)})
    output:-{0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81}

6. Construct the set odd from the odd numbers in the range using a set comprehension (10).
Ans.print({i for i in range(10) if i%2 !=0})
    output:-{1, 3, 5, 7, 9}

7. Use a generator comprehension to return the string 'Got ' and a number for the numbers in range(10). Iterate through this by using a for loop.
Ans.def func():
    for i in range(10) :
        yield 'Got'+str(i)
    
    op=func()
    for i in range(10):
        print(next(op),end='  ')

output:-Got0  Got1  Got2  Got3  Got4  Got5  Got6  Got7  Got8  Got9  

8. Define a function called good that returns the list ['Harry', 'Ron', 'Hermione'].
Ans.def good():
        x =  ['Harry', 'Ron', 'Hermione']
        return x
    print(good())

output:-['Harry', 'Ron', 'Hermione']

9. Define a generator function called get_odds that returns the odd numbers from range(10). Use a for loop to find and print the third value returned.
Ans.def get_odds():
        odd = []
        for i in range(10):
            if i%2 != 0:
            odd.append(i)
        yield odd

    next(get_odds())[2]

output:-5

10. Define an exception called OopsException. Raise this exception to see what happens. Then write the code to catch this exception and print 'Caught an oops'.
Ans.class OopsException(Exception):
        pass

    def test(input):
        if input <0:
            raise OopsException(a)
    try:
        test(-100)
    except Exception as e:
        print('Caught in Oops ->',e)
output:-Caught in Oops -> name 'a' is not defined

11. Use zip() to make a dictionary called movies that pairs these lists: titles = ['Creature of Habit', 'Crewel Fate'] and plots = ['A nun turns into a monster', 'A haunted yarn shop'].
Ans. titles = ['Creature of Habit', 'Crewel Fate']
     plots = ['A nun turns into a monster', 'A haunted yarn shop']
     movies = dict(zip(titles,plots))
     print(movies)
output:- {'Creature of Habit': 'A nun turns into a monster', 'Crewel Fate': 'A haunted yarn shop'}


